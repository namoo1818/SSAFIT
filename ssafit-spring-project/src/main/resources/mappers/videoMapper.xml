<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafit.board.model.dao.VideoDao">
	<resultMap type="Video" id="videoMap">
		<result column="video_num" property="num"/>
		<result column="video_title" property="title"/>
		<result column="video_keyword" property="keyword"/>
		<result column="video_channel" property="channel"/>
		<result column="video_url" property="url"/>
		<result column="video_viewcnt" property="viewcnt"/>
		<result column="video_intensity" property="intensity"/>
	</resultMap>

	<select id="selectOne" resultMap="videoMap" parameterType="int">
		SELECT *
		FROM video
		WHERE video_num = #{num}
	</select>

	<insert id="insertVideo" parameterType="video" keyProperty="num" useGeneratedKeys="true">
		INSERT INTO video (video_title, video_part, video_channel, video_url, video_intensity)
		VALUES (#{title}, #{part}, #{channel}, #{url}, #{intensity})
	</insert>
	
	<delete id="deleteVideo" parameterType="int">
		DELETE FROM video
		WHERE video_num = #{num}
	</delete>
	
	<update id="updateViewCnt" parameterType="int">
		UPDATE video
		SET video_viewcnt = video_viewcnt+1
		WHERE video_num = #{num};
	</update>
	
	<insert id="insertViewLog" parameterType="java.util.HashMap">
		INSERT INTO viewlog (video_num, user_num) VALUES 
		(#{videoNum}, #{userNum});
	</insert>
	
	<update id="updateVideo" parameterType="video">
		UPDATE video
		SET video_title = #{title}, video_part = #{part}, video_channel = #{channel}, video_url = #{url}, video_intensity = #{intensity}
		WHERE video_num = #{num}
	</update>
	
	<!-- 검색기능  -->
	<select id="search" resultMap="videoMap" parameterType="SearchCondition">
		SELECT *
		FROM video
		<!-- 검색 조건 (동적쿼리)-->
		<if test="key != 'none'">
			WHERE ${key} LIKE concat('%', #{word}, '%')
		</if>
		<!-- 어떤 기준으로 어떤 방향으로 정렬 -->
		<if test="orderBy != 'none'">
			ORDER BY ${orderBy} ${orderByDir}
		</if>
	</select>
	
	<!-- 최근에 본 영상 -->
	<select id="RecentlyViewedVideo" resultMap="videoMap" parameterType="int">
		SELECT DISTINCT *
		FROM video v
		RIGHT JOIN viewlog vl
		ON v.video_num = vl.video_num
		JOIN (
			SELECT max(view_date) as 'recently_view'
		    FROM viewlog
		    WHERE user_num = #{id}
		    GROUP BY video_num
		) vl2 
		ON vl.view_date = vl2.recently_view
		ORDER BY vl.view_date DESC;
	</select>

</mapper>